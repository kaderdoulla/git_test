/*
 * This file is generated by jOOQ.
*/
package models.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import models.tables.Classe;
import models.tables.records.ClasseRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClasseDao extends DAOImpl<ClasseRecord, models.tables.pojos.Classe, Integer> {

    /**
     * Create a new ClasseDao without any configuration
     */
    public ClasseDao() {
        super(Classe.CLASSE, models.tables.pojos.Classe.class);
    }

    /**
     * Create a new ClasseDao with an attached configuration
     */
    public ClasseDao(Configuration configuration) {
        super(Classe.CLASSE, models.tables.pojos.Classe.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(models.tables.pojos.Classe object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<models.tables.pojos.Classe> fetchById(Integer... values) {
        return fetch(Classe.CLASSE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public models.tables.pojos.Classe fetchOneById(Integer value) {
        return fetchOne(Classe.CLASSE.ID, value);
    }

    /**
     * Fetch records that have <code>libelle IN (values)</code>
     */
    public List<models.tables.pojos.Classe> fetchByLibelle(String... values) {
        return fetch(Classe.CLASSE.LIBELLE, values);
    }
}
